{
	"info": {
		"_postman_id": "b727f9b1-3952-4e72-ac5a-a36bdd722b44",
		"name": "JSON Placeholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43144911"
	},
	"item": [
		{
			"name": "Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is OK\", () => {\r",
							"    //console.log(pm.response.code)\r",
							"    //pm.response.to.have.status(200);\r",
							"   pm.expect(pm.response.code).to.eql(200);\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
							"   pm.expect(pm.response.code).to.be.a(\"number\");\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is OK\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(120);\r",
							"})\r",
							"\r",
							"pm.test(\"Response status is OK\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\");\r",
							"    pm.expect(pm.response.status).to.be.a(\"string\");\r",
							"})\r",
							"\r",
							"pm.test(\"Post ID is OK\", () => {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[0].id).to.eql(1);\r",
							"})\r",
							"\r",
							"pm.test(\"Name length is OK\", () => {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[1].name).to.have.lengthOf(41);\r",
							"})\r",
							"\r",
							"pm.test(\"Email verify is OK\", () => {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[1].email).to.include(\"@\");\r",
							"})\r",
							"\r",
							"pm.test(\"Email verify for every post is OK\", () => { \r",
							"    const responseBody = pm.response.json();\r",
							"    responseBody.map(object => {\r",
							"        pm.expect(object.email).to.include(\"@\");\r",
							"    })\r",
							"})\r",
							"\r",
							"pm.test(\"Content type is OK\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"pm.test(\"Connection response is OK\", () => {\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"})\r",
							"\r",
							"pm.test(\"Content type value is OK\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/comments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Global\", () => {\r",
							"    const expectedTitle = pm.globals.get(\"postTitle\");\r",
							"    const resBody = pm.response.json();\r",
							"    //console.log(resBody);\r",
							"    pm.expect(resBody.title).to.eql(expectedTitle)\r",
							"})\r",
							"\r",
							"pm.test(\"Collection\", () => {\r",
							"    const expectedURL = pm.collectionVariables.get(\"baseURL\");\r",
							"    //console.log(expectedURL);\r",
							"})\r",
							"\r",
							"pm.test(\"Enivorments\", () => {\r",
							"    const expectedUsername = pm.environment.get(\"username\");\r",
							"    //console.log(expectedUsername);\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"userId\": {{userID}},\r\n  \"id\": 1625,\r\n  \"title\": \"{{postTitle}}\",\r\n  \"body\": \"{{postBody}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/posts",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function generateRandomEmail() {\r",
							"    const domains = [\"gmail.com\", \"yahoo.com\", \"outlook.com\", \"example.com\"];\r",
							"    const chars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r",
							"    let email = \"\";\r",
							"\r",
							"    const usernameLength = Math.floor(Math.random() * 6) + 5;\r",
							"\r",
							"    for (let i = 0; i < usernameLength; i++) {\r",
							"        email += chars.charAt(Math.floor(Math.random() * chars.length));\r",
							"    }\r",
							"    email += \"@\" + domains[Math.floor(Math.random() * domains.length)];\r",
							"\r",
							"    pm.collectionVariables.set(\"randomEmail\", email);\r",
							"}\r",
							"generateRandomEmail();\r",
							"\r",
							"function generateRandomName() {\r",
							"    const names = [\"Anna\", \"Jan\", \"Katarzyna\", \"Piotr\", \"Michał\", \"Alicja\", \"Tomasz\", \"Magdalena\", \"Paweł\", \"Natalia\"];\r",
							"    \r",
							"    name = names[Math.floor(Math.random() * names.length)];\r",
							"    pm.collectionVariables.set(\"randomName\", name);\r",
							"}\r",
							"generateRandomName();\r",
							"\r",
							"function generateRandomUserName() {\r",
							"    const randomNumber = Math.floor(Math.random() * 100) + 10;\r",
							"    let userName = pm.collectionVariables.get(\"randomName\") + randomNumber;\r",
							"    pm.collectionVariables.set(\"randomUserName\",userName);\r",
							"}\r",
							"generateRandomUserName();"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"{{randomName}}\",\r\n    \"username\": \"{{randomUserName}}\",\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\": \"Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\",\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\": \"81.1496\"\r\n      }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/2",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "string"
		},
		{
			"key": "randomEmail",
			"value": ""
		},
		{
			"key": "randomName",
			"value": ""
		},
		{
			"key": "randomUserName",
			"value": ""
		}
	]
}